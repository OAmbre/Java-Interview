/**
 * @program JavaBooks
 * @description: 抽象类
 * @author: mf
 * @create: 2019/03/11 16:36
 */

public abstract class Abstract {
}


// 抽象方法是一种特殊的方法：它只有声明，而没有具体的实现。抽象方法的声明格式：
//abstract void fun();
// 抽象方法必须用abstract关键字进行修饰

/*
[public] abstract class ClassName {
    abstract void fun();
}*/
// 从这里可以看出，抽象类就是为了继承而存在的，如果你定义了一个抽象类，却不去继承它，那么等于白白创建了这个抽象类，
// 因为你不能用它来做任何事情
//对于一个父类，如果它的某个方法在父类中实现出来没有任何意义，必须根据子类的实际需求来进行不同的实现，那么就可以将这个方法声明为abstract方法，此时这个类也就成为abstract类了。
// 包含抽象方法的类称为抽象类，但并不意味着抽象类中只能有抽象方法，它和普通类一样，同样可以拥有成员变量和普通的成员方法。
// 抽象类和普通类的主要有三点区别：
/*
* 1. 抽象方法必须为public或者protected（因为如果为private，则不能被子类继承，子类便无法实现该方法），缺省情况下默认为public。
* 2. 抽象类不能用来创建对象；
* 3. 如果一个类继承于一个抽象类，则子类必须实现父类的抽象方法。如果子类没有实现父类的抽象方法，则必须将子类也定义为为abstract类。
* */